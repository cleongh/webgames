#+title: Desarrollo y despliegue web
#+setupfile: setup.org

* Desarrollo y despliegue
:PROPERTIES:
:CUSTOM_ID: desarrollo-y-despliegue
:END:

No tenéis que desarrollar con la máquina de GitHub, sino en local

Hacer =push= para probar es lento y es una carga innecesaria

#+REVEAL: split

Siempre:

- Abrir vuestro editor favorito con los archivos HTML, JS y demás
- Abrir el navegador con la URL del servidor local
- Abrir las herramientas de desarrollo del navegador

#+REVEAL: split

#+begin_quote
Revisad los recursos del Campus:

- Depurar con Google Chrome
- Depurar JavaScript en el navegador
#+end_quote

#+REVEAL: split

Cuando funcione:

- Hacer =push= y publicar =main=
- Publicar solo carpeta =docs= cuando haya material mejorado (/release/)


* Gestión avanzada

** =package.json=

Es un archivo (en JSON) que describe nuestro proyecto JavaScript en =node.js=, y es la información básica para =npm=

Indica las librerías que hacen falta, con sus versiones

También incluyen comandos que vamos a usar (cómo desarrollar, como hacer el /release/)

** Vite

[[https://es.vite.dev/][Vite]] es una herramienta de configuración automática de proyectos JS (hay otras como [[https://webpack.js.org/][Webpack]])

#+REVEAL: split

Vite es un /bundler/, un programa que coge un punto inicial (=index.html= en nuestro caso), y a partir de lo que haya enlazado, construye:

- Un servidor de desarrollo, para trabajar en local: vuelve a generar las dependencias, recarga la página...
- Una versión de publicación, optimizada para ser publicada

** Instalación de Vite

Para instalar Vite tenéis que usar =npm=

Se puede instalar directamente (esto lo incluye en =package.json=): ~npm install --save-dev vite~




** Uso de Vite

Vite simplifica mucho el desarrollo web

1. Tenemos un proyecto con un =package.json= que incluye Vite en sus dependencias
2. Decimos a =npm= que instale las dependencias automáticamente, y eso instalará Vite y todo lo demás (Phaser, por ejemplo)
3. Arrancamos el servidor de desarrollo de Vite, que analiza y actualiza los cambios
4. Cada vez que queramos hacer /release/, creamos una build apropiada
5. Hacemos =push= del contenido, y con GitHub pages ya está publicado

** Ejemplo

[[https://github.com/cleongh/plantillaphaser][Ejemplo en la plantilla de la asignatura]]
