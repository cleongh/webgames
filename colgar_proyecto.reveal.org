#+title: Publicar un proyecto en la web
#+setupfile: setup.org

* Cómo empaquetar
:PROPERTIES:
:CUSTOM_ID: cómo-empaquetar
:END:

#+REVEAL: split

Hay que alojar el proyecto en un sitio web

Todos, a través del [[https://docs.github.com/en/pages/getting-started-with-github-pages][servicio
de páginas públicas en GitHub]] podéis simplemente hacer un commit del
proyecto y servir la URL

#+REVEAL: split

Alternativas (hay más):

1. Sólo tenéis que crear una rama =main= en un repositorio, y tener ahí
   el archivo =index.html= apropiado (los servidores web usan el
   documento =index.html= como el servido por defecto)
2. Tener nuestra versión de producción en una carpeta =docs= de =main=
   (tenéis que configurarlo en "Settings")

#+REVEAL: split

Una ventaja de hacerlo desde =main= es que no hay que hacer nada más que desarrollar y hacer =push=, y servimos los mismos archivos de desarrollo

En general /esto no es idóneo/, pero acelera y simplifica el proceso

#+REVEAL: split

Una ventaja de hacerlo desde =docs= es que, si el repositorio es privado, solo se servirá/será público lo de esa carpeta

** Rutas
:PROPERTIES:
:CUSTOM_ID: rutas
:END:


Tened cuidado con los recursos:

- Referenciadlos con *rutas relativas* a vuestros =.html= y =.js=  (=imgs/imagen.png=), en vez de *rutas absolutas*
  (=http://mi.ruta.cambiante/imgs/imagen.png=)
- Aseguraos de que están cargados antes de iniciar su uso
- Aseguraos de que están siempre disponibles

** Página en la que incluir el proyecto
:PROPERTIES:
:CUSTOM_ID: página-en-la-que-incluir-el-proyecto
:END:
El archivo =index.html= tiene que ser una página presentable y "bonita"

#+REVEAL: split

Tiene que tener el título del proyecto, un resumen del GDD (una versión en HTML), enlaces pertinentes (como, por ejemplo, al código en =GitHub=), instrucciones y cualquier información adicional relevante

#+REVEAL: split

Además, hay que poner la licencia del mismo e información de la asignatura

* Desarrollo y despliegue
:PROPERTIES:
:CUSTOM_ID: desarrollo-y-despliegue
:END:


No tenéis que desarrollar con la máquina de GitHub, sino en local

Hacer =push= para probar es lento y es una carga innecesaria

#+REVEAL: split

Siempre:

- Abrir vuestro editor favorito con los archivos HTML, JS y demás
- Abrir el navegador con la URL del servidor local
- Abrir las herramientas de desarrollo del navegador

#+REVEAL: split

#+begin_quote
Revisad los recursos del Campus:

- Depurar con Google Chrome
- Depurar JavaScript en el navegador
#+end_quote

#+REVEAL: split

Cuando funcione:

- Hacer =push= y publicar =main=
- Publicar solo carpeta =docs= cuando haya material mejorado (/release/)


* Gestión avanzada

** =package.json=

Es un archivo (en JSON) que describe nuestro proyecto JavaScript en =node.js=, y es la información básica para =npm=

Indica las librerías que hacen falta, con sus versiones

También incluyen comandos que vamos a usar (cómo desarrollar, como hacer el /release/)

** Parcel

[[https://parceljs.org/][Parcel]] es una herramienta de configuración automática de proyectos JS (hay otras como [[https://webpack.js.org/][Webpack]])

#+REVEAL: split

Parcel es un /bundler/, un programa que coge un punto inicial (=index.html= en nuestro caso), y a partir de lo que haya enlazado, construye:

- Un servidor de desarrollo, para trabajar en local: vuelve a generar las dependencias, recarga la página...
- Una versión de publicación, optimizada para ser publicada

** Instalación de Parcel

Para instalar Parcel tenéis que usar =npm=

- Se puede instalar directamente (mala idea): src_sh{npm install parcel}
- Editando el archivo de proyecto de =node.js=: =package.json=

** Uso de Parcel

Parcel simplifica mucho el desarrollo web

1. Tenemos un proyecto con un =package.json= que incluye Parcel en sus dependencias
2. Decimos a =npm= que instale las dependencias automáticamente, y eso instalará Parcel y todo lo demás (Phaser, por ejemplo)
3. Arrancamos el servidor de desarrollo de Parcel, que analiza y actualiza los cambios
4. Cada vez que queramos hacer /release/, creamos una build apropiada
5. Hacemos =push= del contenido, y con GitHub pages ya está publicado

** Ejemplo

[[https://github.com/cleongh/plantillaphaser][Ejemplo en la plantilla de la asignatura]]
